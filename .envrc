# Conda environment
layout anaconda raysort

# Make Python output unbuffered
export PYTHONUNBUFFERED=1

# Use Intel C++ compiler
export CC=/opt/intel/oneapi/compiler/latest/linux/bin/icx
export CXX=/opt/intel/oneapi/compiler/latest/linux/bin/icpx
export CFLAGS="-Ofast -xHost"
export CXXFLAGS="-Ofast -xHost"
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/intel/oneapi/compiler/latest/linux/compiler/lib/intel64_lin/

# Set cache directory for Terraform plugins
export TF_PLUGIN_CACHE_DIR="$HOME/.terraform.d/plugin-cache"

# A bug in Terraform AWS requires us to set this environment variable
export AWS_DEFAULT_REGION=us-west-2

# Set AWS credentials for Hadoop AWS
export AWS_ACCESS_KEY_ID=$(sed -n 's/^aws_access_key_id = \(.*\)/\1/p' ~/.aws/credentials)
export AWS_SECRET_ACCESS_KEY=$(sed -n 's/^aws_secret_access_key = \(.*\)/\1/p' ~/.aws/credentials)

# Alternatively we can use the AWS CLI, but it is slow.
# export AWS_ACCESS_KEY_ID=$(aws configure get default.aws_access_key_id)
# export AWS_SECRET_ACCESS_KEY=$(aws configure get default.aws_secret_access_key)

# Raysort job configurations
export USER=lsf

# Cloud storage configurations
export S3_BUCKET=cloudsort
export AZURE_CONTAINER=raysort-$USER
# TODO(@lsf) get $AZURE_STORAGE_SAS from Terraform
export AZURE_STORAGE_URL="https://raysorteastus.blob.core.windows.net/$AZURE_STORAGE_SAS"

# Set a default config so that we don't need to supply CONFIG= for simple commands like `ssh`
export CONFIG="${CONFIG:-LocalSimple}"

# Used by the autoscaler to upload logs to wandb
export WANDB_API_KEY=ec906ef1e62a2a7adcd9397d98d1c377d05ac09a
